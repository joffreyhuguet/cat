#include <errno.h>
with Interfaces.C; use Interfaces.C;

package Errors with
  SPARK_Mode     => On,
  Abstract_State => (Error_State),
  Initializes    => (Error_State)
is
   ADA_EPERM : constant Int := EPERM;
   ADA_ENOENT : constant Int := ENOENT;
   ADA_ESRCH : constant Int := ESRCH;
   ADA_EINTR : constant Int := EINTR;
   ADA_EIO : constant Int := EIO;
   ADA_ENXIO : constant Int := ENXIO;
   ADA_E2BIG : constant Int := E2BIG;
   ADA_ENOEXEC : constant Int := ENOEXEC;
   ADA_EBADF : constant Int := EBADF;
   ADA_ECHILD : constant Int := ECHILD;
   ADA_EAGAIN : constant Int := EAGAIN;
   ADA_ENOMEM : constant Int := ENOMEM;
   ADA_EACCES : constant Int := EACCES;
   ADA_EFAULT : constant Int := EFAULT;
   ADA_ENOTBLK : constant Int := ENOTBLK;
   ADA_EBUSY : constant Int := EBUSY;
   ADA_EEXIST : constant Int := EEXIST;
   ADA_EXDEV : constant Int := EXDEV;
   ADA_ENODEV : constant Int := ENODEV;
   ADA_ENOTDIR : constant Int := ENOTDIR;
   ADA_EISDIR : constant Int := EISDIR;
   ADA_EINVAL : constant Int := EINVAL;
   ADA_ENFILE : constant Int := ENFILE;
   ADA_EMFILE : constant Int := EMFILE;
   ADA_ENOTTY : constant Int := ENOTTY;
   ADA_ETXTBSY : constant Int := ETXTBSY;
   ADA_EFBIG : constant Int := EFBIG;
   ADA_ENOSPC : constant Int := ENOSPC;
   ADA_ESPIPE : constant Int := ESPIPE;
   ADA_EROFS : constant Int := EROFS;
   ADA_EMLINK : constant Int := EMLINK;
   ADA_EPIPE : constant Int := EPIPE;
   ADA_EDOM : constant Int := EDOM;
   ADA_ERANGE : constant Int := ERANGE;
   ADA_EDEADLK : constant Int := EDEADLK;
   ADA_ENAMETOOLONG : constant Int := ENAMETOOLONG;
   ADA_ENOLCK : constant Int := ENOLCK;
   ADA_ENOSYS : constant Int := ENOSYS;
   ADA_ENOTEMPTY : constant Int := ENOTEMPTY;
   ADA_ELOOP : constant Int := ELOOP;
   ADA_EWOULDBLOCK : constant Int := EWOULDBLOCK;
   ADA_ENOMSG : constant Int := ENOMSG;
   ADA_EIDRM : constant Int := EIDRM;
   ADA_ECHRNG : constant Int := ECHRNG;
   ADA_EL2NSYNC : constant Int := EL2NSYNC;
   ADA_EL3HLT : constant Int := EL3HLT;
   ADA_EL3RST : constant Int := EL3RST;
   ADA_ELNRNG : constant Int := ELNRNG;
   ADA_EUNATCH : constant Int := EUNATCH;
   ADA_ENOCSI : constant Int := ENOCSI;
   ADA_EL2HLT : constant Int := EL2HLT;
   ADA_EBADE : constant Int := EBADE;
   ADA_EBADR : constant Int := EBADR;
   ADA_EXFULL : constant Int := EXFULL;
   ADA_ENOANO : constant Int := ENOANO;
   ADA_EBADRQC : constant Int := EBADRQC;
   ADA_EBADSLT : constant Int := EBADSLT;
   ADA_EDEADLOCK : constant Int := EDEADLOCK;
   ADA_EBFONT : constant Int := EBFONT;
   ADA_ENOSTR : constant Int := ENOSTR;
   ADA_ENODATA : constant Int := ENODATA;
   ADA_ETIME : constant Int := ETIME;
   ADA_ENOSR : constant Int := ENOSR;
   ADA_ENONET : constant Int := ENONET;
   ADA_ENOPKG : constant Int := ENOPKG;
   ADA_EREMOTE : constant Int := EREMOTE;
   ADA_ENOLINK : constant Int := ENOLINK;
   ADA_EADV : constant Int := EADV;
   ADA_ESRMNT : constant Int := ESRMNT;
   ADA_ECOMM : constant Int := ECOMM;
   ADA_EPROTO : constant Int := EPROTO;
   ADA_EMULTIHOP : constant Int := EMULTIHOP;
   ADA_EDOTDOT : constant Int := EDOTDOT;
   ADA_EBADMSG : constant Int := EBADMSG;
   ADA_EOVERFLOW : constant Int := EOVERFLOW;
   ADA_ENOTUNIQ : constant Int := ENOTUNIQ;
   ADA_EBADFD : constant Int := EBADFD;
   ADA_EREMCHG : constant Int := EREMCHG;
   ADA_ELIBACC : constant Int := ELIBACC;
   ADA_ELIBBAD : constant Int := ELIBBAD;
   ADA_ELIBSCN : constant Int := ELIBSCN;
   ADA_ELIBMAX : constant Int := ELIBMAX;
   ADA_ELIBEXEC : constant Int := ELIBEXEC;
   ADA_EILSEQ : constant Int := EILSEQ;
   ADA_ERESTART : constant Int := ERESTART;
   ADA_ESTRPIPE : constant Int := ESTRPIPE;
   ADA_EUSERS : constant Int := EUSERS;
   ADA_ENOTSOCK : constant Int := ENOTSOCK;
   ADA_EDESTADDRREQ : constant Int := EDESTADDRREQ;
   ADA_EMSGSIZE : constant Int := EMSGSIZE;
   ADA_EPROTOTYPE : constant Int := EPROTOTYPE;
   ADA_ENOPROTOOPT : constant Int := ENOPROTOOPT;
   ADA_EPROTONOSUPPORT : constant Int := EPROTONOSUPPORT;
   ADA_ESOCKTNOSUPPORT : constant Int := ESOCKTNOSUPPORT;
   ADA_EOPNOTSUPP : constant Int := EOPNOTSUPP;
   ADA_EPFNOSUPPORT : constant Int := EPFNOSUPPORT;
   ADA_EAFNOSUPPORT : constant Int := EAFNOSUPPORT;
   ADA_EADDRINUSE : constant Int := EADDRINUSE;
   ADA_EADDRNOTAVAIL : constant Int := EADDRNOTAVAIL;
   ADA_ENETDOWN : constant Int := ENETDOWN;
   ADA_ENETUNREACH : constant Int := ENETUNREACH;
   ADA_ENETRESET : constant Int := ENETRESET;
   ADA_ECONNABORTED : constant Int := ECONNABORTED;
   ADA_ECONNRESET : constant Int := ECONNRESET;
   ADA_ENOBUFS : constant Int := ENOBUFS;
   ADA_EISCONN : constant Int := EISCONN;
   ADA_ENOTCONN : constant Int := ENOTCONN;
   ADA_ESHUTDOWN : constant Int := ESHUTDOWN;
   ADA_ETOOMANYREFS : constant Int := ETOOMANYREFS;
   ADA_ETIMEDOUT : constant Int := ETIMEDOUT;
   ADA_ECONNREFUSED : constant Int := ECONNREFUSED;
   ADA_EHOSTDOWN : constant Int := EHOSTDOWN;
   ADA_EHOSTUNREACH : constant Int := EHOSTUNREACH;
   ADA_EALREADY : constant Int := EALREADY;
   ADA_EINPROGRESS : constant Int := EINPROGRESS;
   ADA_ESTALE : constant Int := ESTALE;
   ADA_EUCLEAN : constant Int := EUCLEAN;
   ADA_ENOTNAM : constant Int := ENOTNAM;
   ADA_ENAVAIL : constant Int := ENAVAIL;
   ADA_EISNAM : constant Int := EISNAM;
   ADA_EREMOTEIO : constant Int := EREMOTEIO;
   ADA_EDQUOT : constant Int := EDQUOT;
   ADA_ENOMEDIUM : constant Int := ENOMEDIUM;
   ADA_EMEDIUMTYPE : constant Int := EMEDIUMTYPE;

   function Get_Errno return int;
   pragma Import (C, Get_Errno, "__get_errno");

   procedure P;
end Errors;
